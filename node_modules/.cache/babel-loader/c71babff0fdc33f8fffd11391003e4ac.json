{"ast":null,"code":"var _jsxFileName = \"/home/yashshree/test/src/components/Map.js\";\nimport { useState } from 'react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport GoogleMapReact from 'google-map-react';\nimport LocationMarker from './LocationMarker';\nimport LocationInfoBox from './LocationInfoBox'; // define constants\n\nconst NATURAL_EVENT_WILDFIRE = 8;\n\nconst Map = ({\n  eventData,\n  center,\n  zoom\n}) => {\n  const [locationInfo, setLocationInfo] = useState(null);\n  const markers = eventData.map((ev, index) => {\n    if (ev.categories[0].id === NATURAL_EVENT_WILDFIRE) {\n      return /*#__PURE__*/React.createElement(LocationMarker, {\n        key: index,\n        lat: ev.geometries[0].coordinates[1],\n        lng: ev.geometries[0].coordinates[0],\n        onClick: () => setLocationInfo({\n          id: ev.id,\n          title: ev.title\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 24\n        }\n      });\n    }\n\n    return null;\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: ''\n    },\n    defaultCenter: center,\n    defaultZoom: zoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, markers, \" \"), \" \", locationInfo && /*#__PURE__*/React.createElement(LocationInfoBox, {\n    info: locationInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }\n  }), \" \");\n};\n\nMap.defaultProps = {\n  center: {\n    lat: 42.3265,\n    lng: -122.8756\n  },\n  zoom: 6\n};\nexport default Map;","map":{"version":3,"sources":["/home/yashshree/test/src/components/Map.js"],"names":["useState","React","ReactDOM","GoogleMapReact","LocationMarker","LocationInfoBox","NATURAL_EVENT_WILDFIRE","Map","eventData","center","zoom","locationInfo","setLocationInfo","markers","map","ev","index","categories","id","geometries","coordinates","title","key","defaultProps","lat","lng"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C,CAEA;;AACA,MAAMC,sBAAsB,GAAG,CAA/B;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,MAAb;AAAqBC,EAAAA;AAArB,CAAD,KAAiC;AACrC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,IAAD,CAAhD;AAEA,QAAMa,OAAO,GAAGL,SAAS,CAACM,GAAV,CAAc,CAACC,EAAD,EAAKC,KAAL,KAAe;AACzC,QAAID,EAAE,CAACE,UAAH,CAAc,CAAd,EAAiBC,EAAjB,KAAwBZ,sBAA5B,EAAoD;AAChD,0BAAO,oBAAC,cAAD;AAAgB,QAAA,GAAG,EAAKU,KAAxB;AACP,QAAA,GAAG,EAAKD,EAAE,CAACI,UAAH,CAAc,CAAd,EAAiBC,WAAjB,CAA6B,CAA7B,CADD;AAEP,QAAA,GAAG,EAAKL,EAAE,CAACI,UAAH,CAAc,CAAd,EAAiBC,WAAjB,CAA6B,CAA7B,CAFD;AAGP,QAAA,OAAO,EACH,MAAMR,eAAe,CAAC;AAAEM,UAAAA,EAAE,EAAEH,EAAE,CAACG,EAAT;AAAaG,UAAAA,KAAK,EAAEN,EAAE,CAACM;AAAvB,SAAD,CAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAMH;;AACD,WAAO,IAAP;AACH,GAVe,CAAhB;AAYA,sBAAS;AACD,IAAA,SAAS,EAAG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEL,oBACA,cADA;AACe,IAAA,gBAAgB,EAC3B;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAFJ;AAGA,IAAA,aAAa,EAAKb,MAHlB;AAIA,IAAA,WAAW,EAAKC,IAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKEG,OALF,MAFK,OASDF,YAAY,iBAAI,oBAAE,eAAF;AAAkB,IAAA,IAAI,EAAKA,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATf,MAAT;AAaC,CA5BT;;AA8BQJ,GAAG,CAACgB,YAAJ,GAAmB;AACfd,EAAAA,MAAM,EAAE;AACJe,IAAAA,GAAG,EAAE,OADD;AAEJC,IAAAA,GAAG,EAAE,CAAC;AAFF,GADO;AAKff,EAAAA,IAAI,EAAE;AALS,CAAnB;AAQA,eAAeH,GAAf","sourcesContent":["import { useState } from 'react'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport GoogleMapReact from 'google-map-react'\nimport LocationMarker from './LocationMarker'\nimport LocationInfoBox from './LocationInfoBox'\n\n// define constants\nconst NATURAL_EVENT_WILDFIRE = 8;\n\nconst Map = ({ eventData, center, zoom }) => {\n        const [locationInfo, setLocationInfo] = useState(null)\n\n        const markers = eventData.map((ev, index) => {\n            if (ev.categories[0].id === NATURAL_EVENT_WILDFIRE) {\n                return <LocationMarker key = { index }\n                lat = { ev.geometries[0].coordinates[1] }\n                lng = { ev.geometries[0].coordinates[0] }\n                onClick = {\n                    () => setLocationInfo({ id: ev.id, title: ev.title }) }\n                />\n            }\n            return null\n        })\n\n        return ( <\n            div className = \"map\" >\n            <\n            GoogleMapReact bootstrapURLKeys = {\n                { key: '' } }\n            defaultCenter = { center }\n            defaultZoom = { zoom } >\n            { markers } <\n            /GoogleMapReact> {\n                locationInfo && < LocationInfoBox info = { locationInfo }\n                />} <\n                /div>\n            )\n        }\n\n        Map.defaultProps = {\n            center: {\n                lat: 42.3265,\n                lng: -122.8756\n            },\n            zoom: 6\n        }\n\n        export default Map"]},"metadata":{},"sourceType":"module"}